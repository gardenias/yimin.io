<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yimin, Wu on 栀子花</title><link>https://yimin.io/</link><description>Recent content in Yimin, Wu on 栀子花</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>&amp;copy;2018 Yimin</copyright><lastBuildDate>Fri, 28 Sep 2018 18:40:04 +0800</lastBuildDate><atom:link href="https://yimin.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Agenda</title><link>https://yimin.io/agenda/</link><pubDate>Fri, 12 Oct 2018 20:01:05 +0800</pubDate><guid>https://yimin.io/agenda/</guid><description>Write &amp;#10063; 深入理解 log 函数
&amp;#10063; 2018-10-13 北京动物园见闻
&amp;#10063; LMAX Disruptor research</description></item><item><title>Openhft Chronicle Map Data Store Specification</title><link>https://yimin.io/post/tech/openhft-chronicle-map-data-store-specification/</link><pubDate>Thu, 11 Oct 2018 17:10:23 +0800</pubDate><guid>https://yimin.io/post/tech/openhft-chronicle-map-data-store-specification/</guid><description>Preparation OpenHFT/Chronicle-Map
OpenHFT/Chronicle-Map Replication
Design Overview Each Chronicle Map is split into N completely independent, ordered segments
the number of segments is chosen during the Chronicle Map creation and is never changed.
each segment has an associated 3-level lock (the read, update and write levels).
Query Flow
Compute the hash code of the queried key.</description></item><item><title>OpenHFT/Chronicle-Map Replication</title><link>https://yimin.io/post/tech/openhft-chronicle-map-replication/</link><pubDate>Thu, 11 Oct 2018 16:35:47 +0800</pubDate><guid>https://yimin.io/post/tech/openhft-chronicle-map-replication/</guid><description>Preparation OpenHFT/Chronicle-Map
Key points Enterprise Edition feature
It&amp;#8217;s TCP/IP Replication
TCP/IP Throttling - only broadcasts the latest update of each entry
How Chronicle Map Replication works Refer to an instance of a remote map as a node. Each node can be connected to up to 128 other nodes.
each remote map mirrors its changes over to another remote map.</description></item><item><title>Wikipedia</title><link>https://yimin.io/wikipedia/</link><pubDate>Thu, 11 Oct 2018 16:24:14 +0800</pubDate><guid>https://yimin.io/wikipedia/</guid><description>A Anti-pattern - is a common response to a recurring problem that is usually ineffective and risks being highly counterproductive.
C CRDT - Conflict-free replicated data type.
D Double-checked locking - used to reduce the overhead of acquiring a lock by first testing the locking criterion without actually acquiring the lock</description></item><item><title>OpenHFT/Chronicle-Map</title><link>https://yimin.io/post/tech/openhft-chronicle-map/</link><pubDate>Thu, 11 Oct 2018 15:02:59 +0800</pubDate><guid>https://yimin.io/post/tech/openhft-chronicle-map/</guid><description>Replicate your Key Value Store across your network, with consistency, persistance and performance.
&amp;#8212; OpenHFT Chronicle-Map
github.com/OpenHFT/Chronicle-Map Features Ultra low latency: Chronicle Map targets median latency of both read and write queries of less than 1 microsecond in certain tests.
High concurrency: Write queries scale well up to the number of hardware execution threads in the server. Read queries never block each other.</description></item><item><title>Oskar Schindler[奥斯卡·辛德勒]</title><link>https://yimin.io/post/schindlers-list/</link><pubDate>Wed, 10 Oct 2018 15:50:50 +0800</pubDate><guid>https://yimin.io/post/schindlers-list/</guid><description>Schindler&amp;#8217;s exceptional deeds stemmed from just that elementary sense of decency and humanity that our sophisticated age seldom sincerely believes in. A repentant opportunist saw the light and rebelled against the sadism and vile criminality all around him.
辛德勒的卓越事迹只是源自于基本的礼仪和人性，只不过我们长大后就极少再真诚地相信这些礼仪和人性了。他是一个看到曙光而悔改的机会主义者，并从此背弃了周围的虐待狂和卑鄙的罪犯。
&amp;#8212; Writer Herbert Steinhouse
who interviewed him in 1948 I felt that the Jews were being destroyed. I had to help them; there was no choice.</description></item><item><title>Mee</title><link>https://yimin.io/me/</link><pubDate>Fri, 28 Sep 2018 17:14:43 +0800</pubDate><guid>https://yimin.io/me/</guid><description>吴一敏， 英文名：yimin
主要使用Java工作了10年；对Java及生态相对比较熟悉；很少的使用过python，go和 perl；今年短暂了学习了一周Clojure和 google flutter（移动端，哈哈方向比较随意）。
对数据库、io、网络、PRC等等大小型系统涉及到的高并发，低延迟，缓存银弹，消息中间件等都有所了解和一定的使用；
个人对于编写“让后来人称赞的”代码稍有追求，就目前看在这条路上还有很远的路程等待我，但我就是爱啊（有什么办法）；欢迎在这方面造诣高深的小伙伴能为我指点迷津。
喜欢的两本书《重构：改善既有代码设计》和《软件测试的艺术》。推荐给没有仔细阅读过的朋友阅读；也欢迎阅读过的朋友一起来讨论和践行。</description></item><item><title>Start Blogging</title><link>https://yimin.io/post/start-blogging/</link><pubDate>Tue, 25 Sep 2018 21:10:18 +0800</pubDate><guid>https://yimin.io/post/start-blogging/</guid><description>Start blogging, learning the Deep Read and Deep Work</description></item></channel></rss>