<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on 栀子花</title><link>https://yimin.io/tags/java/</link><description>Recent content in Java on 栀子花</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>&amp;copy;2018 Yimin</copyright><lastBuildDate>Thu, 11 Oct 2018 17:10:23 +0800</lastBuildDate><atom:link href="https://yimin.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Openhft Chronicle Map Data Store Specification</title><link>https://yimin.io/post/tech/openhft-chronicle-map-data-store-specification/</link><pubDate>Thu, 11 Oct 2018 17:10:23 +0800</pubDate><guid>https://yimin.io/post/tech/openhft-chronicle-map-data-store-specification/</guid><description>Preparation OpenHFT/Chronicle-Map
OpenHFT/Chronicle-Map Replication
Design Overview Each Chronicle Map is split into N completely independent, ordered segments
the number of segments is chosen during the Chronicle Map creation and is never changed.
each segment has an associated 3-level lock (the read, update and write levels).
Query Flow
Compute the hash code of the queried key.</description></item><item><title>OpenHFT/Chronicle-Map Replication</title><link>https://yimin.io/post/tech/openhft-chronicle-map-replication/</link><pubDate>Thu, 11 Oct 2018 16:35:47 +0800</pubDate><guid>https://yimin.io/post/tech/openhft-chronicle-map-replication/</guid><description>Preparation OpenHFT/Chronicle-Map
Key points Enterprise Edition feature
It&amp;#8217;s TCP/IP Replication
TCP/IP Throttling - only broadcasts the latest update of each entry
How Chronicle Map Replication works Refer to an instance of a remote map as a node. Each node can be connected to up to 128 other nodes.
each remote map mirrors its changes over to another remote map.</description></item><item><title>OpenHFT/Chronicle-Map</title><link>https://yimin.io/post/tech/openhft-chronicle-map/</link><pubDate>Thu, 11 Oct 2018 15:02:59 +0800</pubDate><guid>https://yimin.io/post/tech/openhft-chronicle-map/</guid><description>Replicate your Key Value Store across your network, with consistency, persistance and performance.
&amp;#8212; OpenHFT Chronicle-Map
github.com/OpenHFT/Chronicle-Map Features Ultra low latency: Chronicle Map targets median latency of both read and write queries of less than 1 microsecond in certain tests.
High concurrency: Write queries scale well up to the number of hardware execution threads in the server. Read queries never block each other.</description></item></channel></rss>